{"ast":null,"code":"var _jsxFileName = \"/Users/parkjuhan/Documents/dev/react-todo-app/src/components/TodoFrame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoList } from \"./TodoList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoFrame = props => {\n  _s();\n\n  const initialTodos = [{\n    id: \"1hsh234\",\n    text: \"출석체크\",\n    state: false,\n    editState: false\n  }, {\n    id: \"1sdg2345\",\n    text: \"운동하기\",\n    state: false,\n    editState: false\n  }, {\n    id: \"123fdgdf456\",\n    text: \"글쓰기\",\n    state: true,\n    editState: false\n  }, {\n    id: \"13sagd234\",\n    text: \"공부하기\",\n    state: false,\n    editState: false\n  }, {\n    id: \"123fdg45\",\n    text: \"놀기\",\n    state: false,\n    editState: false\n  }, {\n    id: \"123ag456\",\n    text: \"게임하기\",\n    state: true,\n    editState: false\n  }];\n  const [todos, setTodos] = useState(initialTodos);\n  const [inputText, setInputText] = useState(\"\");\n\n  const createId = function () {\n    return Math.random().toString(36).substr(2, 16);\n  };\n\n  const onChangeInput = event => {\n    setInputText(event.target.value);\n  };\n\n  const addTodo = event => {\n    if (inputText !== \"\") {\n      const newId = createId();\n      setTodos([...todos, {\n        id: newId,\n        text: inputText,\n        state: false,\n        editState: false\n      }]);\n      setInputText(\"\");\n    } else {\n      alert(\"내용을 입력 해주세요.\");\n    }\n  };\n\n  const editTodo = (event, id) => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      text: event.target.value\n    } : todo));\n  };\n\n  const changeState = id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      state: !todo.state\n    } : todo));\n  };\n\n  const changeEditState = id => {\n    const [editInputText] = todos.filter(todo => todo.id === id).map(todo => todo.text);\n\n    if (editInputText !== \"\") {\n      setTodos(todos.map(todo => todo.id === id ? { ...todo,\n        editState: !todo.editState\n      } : todo));\n    } else {\n      alert(\"내용을 입력 해주세요.\");\n    }\n  };\n\n  const deleteState = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  const setDrageTodoItem = (startTagIndex, destinationTagIndex) => {\n    const startTagValue = todos[startTagIndex];\n    const startTagArray = todos.filter(todo => todo.id === startTagValue.id);\n    const todoArray = todos.filter(todo => todo.id !== startTagValue.id);\n    todoArray.splice(destinationTagIndex, 0, ...startTagArray);\n    setTodos([...todoArray]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-frame\",\n    children: [/*#__PURE__*/_jsxDEV(TodoInput, {\n      inputText: inputText,\n      onChangeInput: onChangeInput,\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      setDrageTodoItem: setDrageTodoItem //dnd set\n      ,\n      todos: todos,\n      inputText: inputText,\n      changeState: changeState,\n      editTodo: editTodo,\n      changeEditState: changeEditState,\n      deleteState: deleteState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoFrame, \"YUkxV+xphlXMGNH1P/+MRQ0rH6k=\");\n\n_c = TodoFrame;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoFrame\");","map":{"version":3,"sources":["/Users/parkjuhan/Documents/dev/react-todo-app/src/components/TodoFrame.jsx"],"names":["React","useState","TodoInput","TodoList","TodoFrame","props","initialTodos","id","text","state","editState","todos","setTodos","inputText","setInputText","createId","Math","random","toString","substr","onChangeInput","event","target","value","addTodo","newId","alert","editTodo","map","todo","changeState","changeEditState","editInputText","filter","deleteState","setDrageTodoItem","startTagIndex","destinationTagIndex","startTagValue","startTagArray","todoArray","splice"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { TodoInput } from \"./TodoInput\";\nimport { TodoList } from \"./TodoList\";\n\nexport const TodoFrame = (props) => {\n  const initialTodos = [\n    {\n      id: \"1hsh234\",\n      text: \"출석체크\",\n      state: false,\n      editState: false,\n    },\n    {\n      id: \"1sdg2345\",\n      text: \"운동하기\",\n      state: false,\n      editState: false,\n    },\n    {\n      id: \"123fdgdf456\",\n      text: \"글쓰기\",\n      state: true,\n      editState: false,\n    },\n    {\n      id: \"13sagd234\",\n      text: \"공부하기\",\n      state: false,\n      editState: false,\n    },\n    {\n      id: \"123fdg45\",\n      text: \"놀기\",\n      state: false,\n      editState: false,\n    },\n    {\n      id: \"123ag456\",\n      text: \"게임하기\",\n      state: true,\n      editState: false,\n    },\n  ];\n\n  const [todos, setTodos] = useState(initialTodos);\n  const [inputText, setInputText] = useState(\"\");\n\n  const createId = function () {\n    return Math.random().toString(36).substr(2, 16);\n  };\n\n  const onChangeInput = (event) => {\n    setInputText(event.target.value);\n  };\n\n  const addTodo = (event) => {\n    if (inputText !== \"\") {\n      const newId = createId();\n      setTodos([\n        ...todos,\n        { id: newId, text: inputText, state: false, editState: false },\n      ]);\n      setInputText(\"\");\n    } else {\n      alert(\"내용을 입력 해주세요.\");\n    }\n  };\n\n  const editTodo = (event, id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, text: event.target.value } : todo\n      )\n    );\n  };\n\n  const changeState = (id) => {\n    setTodos(\n      todos.map((todo) =>\n        todo.id === id ? { ...todo, state: !todo.state } : todo\n      )\n    );\n  };\n\n  const changeEditState = (id) => {\n    const [editInputText] = todos\n      .filter((todo) => todo.id === id)\n      .map((todo) => todo.text);\n\n    if (editInputText !== \"\") {\n      setTodos(\n        todos.map((todo) =>\n          todo.id === id ? { ...todo, editState: !todo.editState } : todo\n        )\n      );\n    } else {\n      alert(\"내용을 입력 해주세요.\");\n    }\n  };\n\n  const deleteState = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const setDrageTodoItem = (startTagIndex, destinationTagIndex) => {\n    const startTagValue = todos[startTagIndex];\n    const startTagArray = todos.filter((todo) => todo.id === startTagValue.id);\n    const todoArray = todos.filter((todo) => todo.id !== startTagValue.id);\n    todoArray.splice(destinationTagIndex, 0, ...startTagArray);\n    setTodos([...todoArray]);\n  };\n\n  return (\n    <div className=\"todo-frame\">\n      <TodoInput\n        inputText={inputText}\n        onChangeInput={onChangeInput}\n        addTodo={addTodo}\n      />\n      <TodoList\n        setDrageTodoItem={setDrageTodoItem} //dnd set\n        todos={todos}\n        inputText={inputText}\n        changeState={changeState}\n        editTodo={editTodo}\n        changeEditState={changeEditState}\n        deleteState={deleteState}\n      />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}